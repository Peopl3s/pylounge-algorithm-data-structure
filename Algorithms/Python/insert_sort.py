'''
Сортировка вставками (Insert Sort).

Хотя этот алгоритм сортировки уступает в эффективности более сложным (таким как быстрая сортировка), у него есть ряд преимуществ:

- эффективен на небольших наборах данных, на наборах данных до десятков элементов может оказаться лучшим;

- эффективен на наборах данных, которые уже частично отсортированы;

- это устойчивый алгоритм сортировки (не меняет порядок элементов, которые уже отсортированы);

- может сортировать список по мере его получения;

-не требует временной памяти, даже под стек.

Минусом же является высокая сложность алгоритма: O(n²).

Лучший случай - массив отсортирован.
Худший - массив отсортирован в обратном порядке. 
'''

def insert_sort(arr):
  for i in range(len(arr)):
    value = arr[i]
    j = i - 1
    while j > 0 and arr[j] > value:
      arr[j + 1] = arr[j]
      j -= 1
    arr[j + 1] = value
  return arr

arr = [1, 9, 2, 54, 3]
print(insert_sort(arr))